{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container relative md:mt-24 my-16\"\n};\nconst _hoisted_2 = {\n  class: \"relative isolate overflow-hidden px-6 py-12 sm:px-24\"\n};\nconst _hoisted_3 = {\n  class: \"mx-auto max-w-3xl text-center text-3xl font-semibold tracking-tight text-black dark:text-white sm:text-4xl\"\n};\nconst _hoisted_4 = {\n  class: \"mx-auto mt-6 max-w-lg text-center text-lg text-gray-900 dark:text-gray-400\"\n};\nconst _hoisted_5 = [\"placeholder\"];\nconst _hoisted_6 = {\n  type: \"submit\",\n  class: \"flex-none rounded-md bg-dropshiphub-primary-500 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-dropshiphub-secondary-500\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"mt-4 text-center text-sm text-green-600\"\n};\nconst _hoisted_8 = {\n  key: 1,\n  class: \"mt-4 text-center text-sm text-red-600\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"h3\", _hoisted_3, _toDisplayString(_ctx.$t('newsletter.title')), 1 /* TEXT */), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(_ctx.$t('newsletter.description')), 1 /* TEXT */), _createElementVNode(\"form\", {\n    class: \"mx-auto mt-10 flex max-w-md gap-x-4\",\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.handleSubscribe && $options.handleSubscribe(...args), [\"prevent\"]))\n  }, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"email-address\",\n    class: \"sr-only\"\n  }, \"Email address\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"email-address\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.subscribeEmail = $event),\n    name: \"email\",\n    type: \"email\",\n    autocomplete: \"email\",\n    required: \"\",\n    class: \"min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 outline-none text-gray-900 dark:text-white dark:bg-slate-800 shadow-sm ring-1 ring-inset ring-dropshiphub-primary-500/10 focus:ring-2 focus:ring-inset focus:ring-dropshiphub-primary-500 sm:text-sm/6\",\n    placeholder: _ctx.$t('newsletter.placeholder')\n  }, null, 8 /* PROPS */, _hoisted_5), [[_vModelText, $data.subscribeEmail]]), _createElementVNode(\"button\", _hoisted_6, _toDisplayString(_ctx.$t('newsletter.buttonText')), 1 /* TEXT */)], 32 /* NEED_HYDRATION */), $data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","type","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","$t","_hoisted_4","onSubmit","_cache","_withModifiers","args","$options","handleSubscribe","for","id","$event","$data","subscribeEmail","name","autocomplete","required","placeholder","_hoisted_5","_hoisted_6","successMessage","_hoisted_7","_createCommentVNode","errorMessage","_hoisted_8"],"sources":["/Users/marwanaboudaoud/projects/DropshiphubWebsite/src/components/contact/newsletter.vue"],"sourcesContent":["<template>\n    <div class=\"container relative md:mt-24 my-16\">\n        <div class=\"relative isolate overflow-hidden px-6 py-12 sm:px-24\">\n            <h3 class=\"mx-auto max-w-3xl text-center text-3xl font-semibold tracking-tight text-black dark:text-white sm:text-4xl\">\n                {{ $t('newsletter.title') }}\n            </h3>\n            <p class=\"mx-auto mt-6 max-w-lg text-center text-lg text-gray-900 dark:text-gray-400\">{{$t('newsletter.description') }}</p>\n            <form class=\"mx-auto mt-10 flex max-w-md gap-x-4\" @submit.prevent=\"handleSubscribe\">\n                <label for=\"email-address\" class=\"sr-only\">Email address</label>\n                <input id=\"email-address\" v-model=\"subscribeEmail\" name=\"email\" type=\"email\" autocomplete=\"email\" required\n                        class=\"min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 outline-none text-gray-900 dark:text-white dark:bg-slate-800 shadow-sm ring-1 ring-inset ring-dropshiphub-primary-500/10 focus:ring-2 focus:ring-inset focus:ring-dropshiphub-primary-500 sm:text-sm/6\"\n                        :placeholder=\"$t('newsletter.placeholder')\" />\n                <button type=\"submit\"\n                    class=\"flex-none rounded-md bg-dropshiphub-primary-500 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-dropshiphub-secondary-500\">\n                    {{ $t('newsletter.buttonText') }}\n                </button>\n            </form>\n            <div v-if=\"successMessage\" class=\"mt-4 text-center text-sm text-green-600\">\n                {{ successMessage }}\n            </div>\n            <div v-if=\"errorMessage\" class=\"mt-4 text-center text-sm text-red-600\">\n                {{ errorMessage }}\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            subscribeEmail: '',\n            successMessage: '',\n            errorMessage: ''\n        }\n    },\n    methods: {\n        async handleSubscribe() {\n            try {\n                const response = await fetch('http://localhost:8890/api/v1/send-updates', {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        email: this.subscribeEmail\n                    })\n                })\n\n                if (response.ok) {\n                    this.successMessage = 'Successfully subscribed!'\n                    this.subscribeEmail = ''\n                    setTimeout(() => {\n                        this.successMessage = ''\n                    }, 5000)\n                } else {\n                    throw new Error('Subscription failed')\n                }\n            } catch (error) {\n                this.errorMessage = 'Failed to subscribe. Please try again.'\n                setTimeout(() => {\n                    this.errorMessage = ''\n                }, 5000)\n            }\n        }\n    }\n}\n</script>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAmC;;EACrCA,KAAK,EAAC;AAAsD;;EACzDA,KAAK,EAAC;AAA4G;;EAGnHA,KAAK,EAAC;AAA4E;mBANjG;;EAYwBC,IAAI,EAAC,QAAQ;EACjBD,KAAK,EAAC;;;EAb1BE,GAAA;EAiBuCF,KAAK,EAAC;;;EAjB7CE,GAAA;EAoBqCF,KAAK,EAAC;;;uBAnBvCG,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBFC,mBAAA,CAqBM,OArBNC,UAqBM,GApBFD,mBAAA,CAEK,MAFLE,UAEK,EAAAC,gBAAA,CADEC,IAAA,CAAAC,EAAE,sCAETL,mBAAA,CAA2H,KAA3HM,UAA2H,EAAAH,gBAAA,CAAnCC,IAAA,CAAAC,EAAE,4CAC1FL,mBAAA,CASO;IATDL,KAAK,EAAC,qCAAqC;IAAEY,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAPrEC,cAAA,KAAAC,IAAA,KAO+EC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;gCAC9EV,mBAAA,CAAgE;IAAzDa,GAAG,EAAC,eAAe;IAAClB,KAAK,EAAC;KAAU,eAAa,sB,gBACxDK,mBAAA,CAEsD;IAF/Cc,EAAE,EAAC,eAAe;IATzC,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IASmDC,KAAA,CAAAC,cAAc,GAAAF,MAAA;IAAEG,IAAI,EAAC,OAAO;IAACtB,IAAI,EAAC,OAAO;IAACuB,YAAY,EAAC,OAAO;IAACC,QAAQ,EAAR,EAAQ;IAClGzB,KAAK,EAAC,0PAA0P;IAC/P0B,WAAW,EAAEjB,IAAA,CAAAC,EAAE;0BAXxCiB,UAAA,I,cASmDN,KAAA,CAAAC,cAAc,E,GAGjDjB,mBAAA,CAGS,UAHTuB,UAGS,EAAApB,gBAAA,CADFC,IAAA,CAAAC,EAAE,0C,4BAGFW,KAAA,CAAAQ,cAAc,I,cAAzB1B,mBAAA,CAEM,OAFN2B,UAEM,EAAAtB,gBAAA,CADCa,KAAA,CAAAQ,cAAc,oBAlBjCE,mBAAA,gBAoBuBV,KAAA,CAAAW,YAAY,I,cAAvB7B,mBAAA,CAEM,OAFN8B,UAEM,EAAAzB,gBAAA,CADCa,KAAA,CAAAW,YAAY,oBArB/BD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}