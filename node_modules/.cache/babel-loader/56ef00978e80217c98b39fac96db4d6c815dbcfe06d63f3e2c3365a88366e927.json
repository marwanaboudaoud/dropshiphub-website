{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'LanguageSwitcher',\n  data() {\n    return {\n      isOpen: false\n    };\n  },\n  computed: {\n    currentLocale() {\n      return this.$i18n.locale.value;\n    }\n  },\n  methods: {\n    switchLanguage(locale) {\n      this.$i18n.changeLanguage(locale);\n      localStorage.setItem('locale', locale);\n      this.updateRoute(locale);\n      this.isOpen = false;\n    },\n    updateRoute(locale) {\n      const currentPath = this.$route.path;\n      const pathWithoutLocale = currentPath.replace(/^\\/(en|nl)/, '');\n      if (locale === 'nl') {\n        this.$router.push(pathWithoutLocale);\n      } else {\n        this.$router.push(`/${locale}${pathWithoutLocale}`);\n      }\n    }\n  },\n  mounted() {\n    // Close dropdown when clicking outside\n    document.addEventListener('click', e => {\n      if (!this.$el.contains(e.target)) {\n        this.isOpen = false;\n      }\n    });\n  },\n  beforeUnmount() {\n    // Clean up event listener\n    document.removeEventListener('click', this.closeDropdown);\n  }\n};","map":{"version":3,"names":["name","data","isOpen","computed","currentLocale","$i18n","locale","value","methods","switchLanguage","changeLanguage","localStorage","setItem","updateRoute","currentPath","$route","path","pathWithoutLocale","replace","$router","push","mounted","document","addEventListener","e","$el","contains","target","beforeUnmount","removeEventListener","closeDropdown"],"sources":["/Users/marwanaboudaoud/projects/DropshiphubWebsite/src/components/LanguageSwitcher.vue"],"sourcesContent":["<template>\n  <div class=\"relative inline-block\">\n    <button\n      @click=\"isOpen = !isOpen\"\n      class=\"flex items-center space-x-2 rounded-md px-3 py-1.5 bg-transparent hover:bg-gray-100 dark:hover:bg-gray-800\"\n    >\n      <img\n        :src=\"currentLocale === 'nl' ? require('../assets/images/flags/nl.png') : require('../assets/images/flags/en.png')\"\n        class=\"w-8 h-4\"\n        :alt=\"currentLocale.toUpperCase()\"\n      />\n      <span>{{ currentLocale.toUpperCase() }}</span>\n    </button>\n\n    <div\n      v-if=\"isOpen\"\n      class=\"absolute mt-1 w-24 rounded-md shadow-lg bg-white dark:bg-slate-900 ring-1 ring-black ring-opacity-5 z-50\"\n    >\n      <div class=\"py-1\">\n        <button\n          @click=\"switchLanguage('nl')\"\n          class=\"flex items-center w-full px-3 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-800\"\n        >\n          <img :src=\"require('../assets/images/flags/nl.png')\" class=\"w-8 h-4 mr-2\" alt=\"NL\" />\n          <span>NL</span>\n        </button>\n        <button\n          @click=\"switchLanguage('en')\"\n          class=\"flex items-center w-full px-3 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-800\"\n        >\n          <img :src=\"require('../assets/images/flags/en.png')\" class=\"w-8 h-4 mr-2\" alt=\"EN\" />\n          <span>EN</span>\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nexport default {\n  name: 'LanguageSwitcher',\n  data() {\n    return {\n      isOpen: false\n    }\n  },\n  computed: {\n    currentLocale() {\n      return this.$i18n.locale.value;\n    }\n  },\n  methods: {\n    switchLanguage(locale) {\n      this.$i18n.changeLanguage(locale);\n      localStorage.setItem('locale', locale);\n      this.updateRoute(locale);\n      this.isOpen = false;\n    },\n    updateRoute(locale) {\n      const currentPath = this.$route.path;\n      const pathWithoutLocale = currentPath.replace(/^\\/(en|nl)/, '');\n      \n      if (locale === 'nl') {\n        this.$router.push(pathWithoutLocale);\n      } else {\n        this.$router.push(`/${locale}${pathWithoutLocale}`);\n      }\n    }\n  },\n  mounted() {\n    // Close dropdown when clicking outside\n    document.addEventListener('click', (e) => {\n      if (!this.$el.contains(e.target)) {\n        this.isOpen = false;\n      }\n    });\n  },\n  beforeUnmount() {\n    // Clean up event listener\n    document.removeEventListener('click', this.closeDropdown);\n  }\n}\n</script>\n"],"mappings":";AAwCA,eAAe;EACbA,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;IACV;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,KAAK;IAChC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACH,MAAM,EAAE;MACrB,IAAI,CAACD,KAAK,CAACK,cAAc,CAACJ,MAAM,CAAC;MACjCK,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEN,MAAM,CAAC;MACtC,IAAI,CAACO,WAAW,CAACP,MAAM,CAAC;MACxB,IAAI,CAACJ,MAAK,GAAI,KAAK;IACrB,CAAC;IACDW,WAAWA,CAACP,MAAM,EAAE;MAClB,MAAMQ,WAAU,GAAI,IAAI,CAACC,MAAM,CAACC,IAAI;MACpC,MAAMC,iBAAgB,GAAIH,WAAW,CAACI,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;MAE/D,IAAIZ,MAAK,KAAM,IAAI,EAAE;QACnB,IAAI,CAACa,OAAO,CAACC,IAAI,CAACH,iBAAiB,CAAC;MACtC,OAAO;QACL,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,IAAId,MAAM,GAAGW,iBAAiB,EAAE,CAAC;MACrD;IACF;EACF,CAAC;EACDI,OAAOA,CAAA,EAAG;IACR;IACAC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAGC,CAAC,IAAK;MACxC,IAAI,CAAC,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC,EAAE;QAChC,IAAI,CAACzB,MAAK,GAAI,KAAK;MACrB;IACF,CAAC,CAAC;EACJ,CAAC;EACD0B,aAAaA,CAAA,EAAG;IACd;IACAN,QAAQ,CAACO,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACC,aAAa,CAAC;EAC3D;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}