{"ast":null,"code":"import { ref } from \"vue\";\nimport { Swiper, SwiperSlide } from 'swiper/vue';\nimport \"swiper/swiper-bundle.css\";\nimport 'swiper/css';\nexport default {\n  components: {\n    Swiper,\n    SwiperSlide\n  },\n  setup() {\n    const tiers = [{\n      price: 19,\n      order: 2500,\n      products: 10000\n    }, {\n      price: 39,\n      order: 5000,\n      products: 20000\n    }, {\n      price: 59,\n      order: 10000,\n      products: 40000\n    }, {\n      price: 79,\n      order: 15000,\n      products: 80000\n    }, {\n      price: 99,\n      order: 30000,\n      products: 100000\n    }, {\n      price: 119,\n      order: 40000,\n      products: 150000\n    }, {\n      price: 139,\n      order: 50000,\n      products: 180000\n    }, {\n      price: 159,\n      order: 60000,\n      products: 200000\n    }, {\n      price: 179,\n      order: 80000,\n      products: 250000\n    }];\n    const orderValue = ref(tiers[0].order);\n    const productValue = ref(tiers[0].products);\n    const selectedIndex = ref(0);\n    const swiperInstance = ref(null);\n    const finalPrice = ref(tiers[0].price);\n    const duplicatedTiers = [...tiers, ...tiers, ...tiers];\n    const updatePricing = () => {\n      if (!tiers || tiers.length === 0) return;\n      let selectedTierIndex = 0;\n\n      // Find the selected tier based on order and product value\n      for (let i = 0; i < tiers.length; i++) {\n        if (orderValue.value <= tiers[i].order && productValue.value <= tiers[i].products) {\n          selectedTierIndex = i;\n          break;\n        }\n      }\n      selectedIndex.value = selectedTierIndex;\n      const currentTier = tiers[selectedTierIndex];\n      const nextTier = tiers[selectedTierIndex + 1] || currentTier; // Don't go beyond the last tier\n\n      // Calculate ratios only if next tier exists, otherwise ratio is 0\n      const orderRatio = nextTier !== currentTier ? (orderValue.value - currentTier.order) / (nextTier.order - currentTier.order) : 0;\n      const productRatio = nextTier !== currentTier ? (productValue.value - currentTier.products) / (nextTier.products - currentTier.products) : 0;\n      const ratio = Math.max(orderRatio, productRatio, 0);\n\n      // Calculate final price based on ratio\n      finalPrice.value = Math.round(currentTier.price + ratio * (nextTier.price - currentTier.price));\n\n      // Update the swiper slider to match the selection\n      if (swiperInstance.value) {\n        const swiper = swiperInstance.value;\n        const targetIndex = selectedIndex.value - 1;\n        swiper.slideTo(targetIndex, 300, false);\n      }\n    };\n    const onSwiperInit = swiper => {\n      swiperInstance.value = swiper;\n    };\n    const isSelected = index => index === selectedIndex.value;\n    return {\n      orderValue,\n      productValue,\n      finalPrice,\n      duplicatedTiers,\n      isSelected,\n      updatePricing,\n      onSwiperInit\n    };\n  }\n};","map":{"version":3,"names":["ref","Swiper","SwiperSlide","components","setup","tiers","price","order","products","orderValue","productValue","selectedIndex","swiperInstance","finalPrice","duplicatedTiers","updatePricing","length","selectedTierIndex","i","value","currentTier","nextTier","orderRatio","productRatio","ratio","Math","max","round","swiper","targetIndex","slideTo","onSwiperInit","isSelected","index"],"sources":["/Users/marwanaboudaoud/projects/DropshiphubWebsite/src/components/software-pricing-plans.vue"],"sourcesContent":["<template>\r\n  <div class=\"container relative md:mt-24 mt-16\">\r\n    <div class=\"grid grid-cols-1 pb-8 text-center\">\r\n      <h4 class=\"mb-4 md:text-3xl md:leading-normal text-2xl leading-normal font-semibold\">\r\n        {{ $t('pricing.title') }}\r\n      </h4>\r\n      <p class=\"text-slate-400 max-w-xl mx-auto\">\r\n        {{ $t('pricing.description') }}\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Only render the pricing UI if tiers array is defined and has at least one element -->\r\n    <div v-if=\"tiers && tiers.length > 0\" class=\"grid grid-cols-1 sm:grid-cols-2 gap-x-10 gap-y-10 sm:gap-y-0 mt-24\">\r\n      <div class=\"col-span-1\">\r\n        <span>Orders per maand ({{ orderValue }})</span>\r\n        <div class=\"relative mt-4 mb-12\">\r\n          <label for=\"orders-range-input\" class=\"sr-only\">Labels range</label>\r\n          <input id=\"orders-range-input\" type=\"range\" v-model=\"orderValue\" \r\n            :min=\"tiers[0]?.order\" :max=\"tiers[tiers.length - 1]?.order\" \r\n            @input=\"updatePricing\"\r\n            class=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700 accent-dropshiphub-primary-500\">\r\n          <span class=\"text-sm text-gray-500 dark:text-gray-400 absolute start-0 -bottom-6\">{{ tiers[0]?.order }}</span>\r\n          <span class=\"text-sm text-gray-500 dark:text-gray-400 absolute start-1/3 -bottom-6\">{{ tiers[Math.floor(tiers.length / 2)]?.order }}</span>\r\n          <span class=\"text-sm text-gray-500 dark:text-gray-400 absolute end-0 -bottom-6\">{{ tiers[tiers.length - 1]?.order }}</span>\r\n        </div>\r\n\r\n        <span>Producten ({{ productValue }})</span>\r\n        <div class=\"relative my-4\">\r\n          <label for=\"products-range-input\" class=\"sr-only\">Labels range</label>\r\n          <input id=\"products-range-input\" type=\"range\" v-model=\"productValue\" \r\n            :min=\"tiers[0]?.products\" :max=\"tiers[tiers.length - 1]?.products\" \r\n            @input=\"updatePricing\"\r\n            class=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700 accent-dropshiphub-primary-500\">\r\n          <span class=\"text-sm text-gray-500 dark:text-gray-400 absolute start-0 -bottom-6\">{{ tiers[0]?.products }}</span>\r\n          <span class=\"text-sm text-gray-500 dark:text-gray-400 absolute start-1/3 -bottom-6\">{{ tiers[Math.floor(tiers.length / 2)]?.products }}</span>\r\n          <span class=\"text-sm text-gray-500 dark:text-gray-400 absolute end-0 -bottom-6\">{{ tiers[tiers.length - 1]?.products }}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"h-full flex text-center ring-1 ring-inset ring-yellow-600/20 rounded-lg shadow col-span-1 border-2 border-gray-200 min-h-52\">\r\n        <div class=\"m-auto p-4\">\r\n          <span class=\"relative h6 -top-5 text-xl\">€</span>\r\n          <span class=\"text-5xl h6 font-bold\">{{ finalPrice }}</span>\r\n          <br /> Per koppeling / Per maand\r\n          <a href=\"\"\r\n            class='py-2 mt-4 px-5 inline-block font-semibold tracking-wide border align-middle duration-500 text-base text-center rounded-md w-full bg-dropshiphub-primary-500 hover:bg-dropshiphub-secondary-500 border-dropshiphub-primary-500 hover:border-dropshiphub-secondary-500 text-white'>\r\n            Started Now\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"py-24 sm:pb-32\">\r\n      <div class=\"mx-auto max-w-7xl px-6\">\r\n        <swiper @init=\"onSwiperInit\" :slides-per-view=\"4.4\" :space-between=\"10\" ref=\"swiperRef\"\r\n          :slides-offset-before=\"5\" :breakpoints=\"{\r\n            0: {\r\n              slidesPerView: 1.4,\r\n            },\r\n            576: {\r\n              slidesPerView: 2.4,\r\n            },\r\n            1024: {\r\n              slidesPerView: 3.4,\r\n            }\r\n          }\" class=\"swiper swiper-container items-center gap-y-12\">\r\n          <!-- Only render the swiper slides if duplicatedTiers is defined and has items -->\r\n          <swiper-slide v-for=\"(tier, index) in duplicatedTiers\" :key=\"index\" :data-tier-index=\"index\"\r\n            :class=\"['shadow rounded-md p-6 border-2',\r\n            isSelected(index) ? 'bg-gradient-to-t bg-dropshiphub-primary-500/100 border-dropshiphub-primary-500' : 'bg-white border-gray-200']\">\r\n            <div class=\"mb-6\" :class=\"isSelected(index) ? 'text-white' : 'text-gray-800'\">\r\n              <span class=\"relative h6 -top-5 text-xl\">€</span>\r\n              <span class=\"text-5xl h6 font-bold\"> {{ tier.price }}</span>\r\n              <span class=\"inline-block text-md ml-2\">Per koppeling <br> Per maand</span>\r\n              <a href=\"\"\r\n                :class=\"['py-2 mt-4 px-5 inline-block font-semibold tracking-wide border align-middle duration-500 text-base text-center rounded-md w-full',\r\n                isSelected(index)\r\n                  ? 'text-dropshiphub-primary-500 bg-white hover:bg-dropshiphub-primary-500/100 hover:text-white'\r\n                  : 'bg-dropshiphub-primary-500 hover:bg-dropshiphub-secondary-500 border-dropshiphub-primary-500 hover:border-dropshiphub-secondary-500 text-white']\">\r\n                Started Now\r\n              </a>\r\n            </div>\r\n            <div class=\"mb-6\" :class=\"isSelected(index) ? 'text-white' : 'text-gray-600'\">\r\n              <p>{{ tier.order }} orders</p>\r\n              <p>{{ tier.products }} producten</p>\r\n            </div>\r\n            <div class=\"border-b\" :class=\"isSelected(index) ? 'border-white' : 'border-gray-200'\"></div>\r\n            <ul class=\"self-start pt-8\">\r\n              <li v-for=\"(feature, featureIndex) in ['Complete documentation', 'Working materials in Figma', '100GB cloud storage', '500 team members', 'Free Support']\"\r\n                :key=\"featureIndex\" :class=\"['flex items-center pl-2', featureIndex === 0 ? 'mb-1' : 'my-1',\r\n                isSelected(index) ? 'text-white' : 'text-gray-600']\">\r\n                <i class=\"uil uil-check-circle text-xl mr-2\"\r\n                  :class=\"isSelected(index) ? 'text-white' : 'text-dropshiphub-primary-500'\"></i>\r\n                <span>{{ feature }}</span>\r\n              </li>\r\n            </ul>\r\n          </swiper-slide>\r\n        </swiper>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script>\r\nimport { ref } from \"vue\";\r\nimport { Swiper, SwiperSlide } from 'swiper/vue';\r\nimport \"swiper/swiper-bundle.css\";\r\nimport 'swiper/css';\r\n\r\nexport default {\r\n  components: {\r\n    Swiper,\r\n    SwiperSlide,\r\n  },\r\n\r\n  setup() {\r\n    const tiers = [\r\n      { price: 19, order: 2500, products: 10000 },\r\n      { price: 39, order: 5000, products: 20000 },\r\n      { price: 59, order: 10000, products: 40000 },\r\n      { price: 79, order: 15000, products: 80000 },\r\n      { price: 99, order: 30000, products: 100000 },\r\n      { price: 119, order: 40000, products: 150000 },\r\n      { price: 139, order: 50000, products: 180000 },\r\n      { price: 159, order: 60000, products: 200000 },\r\n      { price: 179, order: 80000, products: 250000 },\r\n    ];\r\n\r\n    const orderValue = ref(tiers[0].order);\r\n    const productValue = ref(tiers[0].products);\r\n    const selectedIndex = ref(0);\r\n    const swiperInstance = ref(null);\r\n    const finalPrice = ref(tiers[0].price);\r\n\r\n    const duplicatedTiers = [...tiers, ...tiers, ...tiers];\r\n\r\n    const updatePricing = () => {\r\n      if (!tiers || tiers.length === 0) return;\r\n\r\n      let selectedTierIndex = 0;\r\n\r\n      // Find the selected tier based on order and product value\r\n  for (let i = 0; i < tiers.length; i++) {\r\n    if (orderValue.value <= tiers[i].order && productValue.value <= tiers[i].products) {\r\n      selectedTierIndex = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n\r\n      selectedIndex.value = selectedTierIndex;\r\n\r\n      const currentTier = tiers[selectedTierIndex];\r\n      const nextTier = tiers[selectedTierIndex + 1] || currentTier; // Don't go beyond the last tier\r\n\r\n      // Calculate ratios only if next tier exists, otherwise ratio is 0\r\n      const orderRatio = nextTier !== currentTier ? (orderValue.value - currentTier.order) / (nextTier.order - currentTier.order) : 0;\r\n      const productRatio = nextTier !== currentTier ? (productValue.value - currentTier.products) / (nextTier.products - currentTier.products) : 0;\r\n\r\n      const ratio = Math.max(orderRatio, productRatio, 0);\r\n\r\n      // Calculate final price based on ratio\r\n      finalPrice.value = Math.round(currentTier.price + ratio * (nextTier.price - currentTier.price));\r\n\r\n      // Update the swiper slider to match the selection\r\n      if (swiperInstance.value) {\r\n        const swiper = swiperInstance.value;\r\n        const targetIndex = selectedIndex.value - 1;\r\n        swiper.slideTo(targetIndex, 300, false);\r\n      }\r\n    };\r\n\r\n    const onSwiperInit = (swiper) => {\r\n      swiperInstance.value = swiper;\r\n    };\r\n\r\n    const isSelected = (index) => index === selectedIndex.value;\r\n\r\n    return {\r\n      orderValue,\r\n      productValue,\r\n      finalPrice,\r\n      duplicatedTiers,\r\n      isSelected,\r\n      updatePricing,\r\n      onSwiperInit,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}