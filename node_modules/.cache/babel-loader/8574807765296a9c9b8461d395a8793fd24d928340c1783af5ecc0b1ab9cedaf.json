{"ast":null,"code":"import { createWebHistory, createRouter } from \"vue-router\";\nconst routes = [{\n  path: \"/\",\n  name: \"index\",\n  component: () => import('../pages/index.vue')\n}, {\n  path: \"/contact-one\",\n  name: \"contact-one\",\n  component: () => import('../pages/contact-one.vue')\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const lang = to.params.lang;\n\n  // Redirect to Dutch version if no language specified\n  if (!lang) {\n    return next({\n      params: {\n        lang: 'nl'\n      },\n      replace: true\n    });\n  }\n\n  // Handle English route without trailing slash\n  if (lang === 'en') {\n    const path = to.fullPath;\n    if (path.match(/\\/en\\//)) {\n      return next(path.replace('/en/', '/en'));\n    }\n  }\n\n  // Redirect invalid language codes to Dutch\n  if (!['nl', 'en'].includes(lang)) {\n    return next({\n      params: {\n        lang: 'nl'\n      },\n      replace: true\n    });\n  }\n  next();\n});\nexport default router;","map":{"version":3,"names":["createWebHistory","createRouter","routes","path","name","component","router","history","beforeEach","to","from","next","lang","params","replace","fullPath","match","includes"],"sources":["/Users/marwanaboudaoud/projects/DropshiphubWebsite/src/router/index.js"],"sourcesContent":["import { createWebHistory, createRouter } from \"vue-router\";\r\n\r\nconst routes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"index\",\r\n    component: () => import('../pages/index.vue'),\r\n  },\r\n  {\r\n    path: \"/contact-one\",\r\n    name: \"contact-one\",\r\n    component: () => import('../pages/contact-one.vue'),\r\n  },\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes,\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  const lang = to.params.lang;\r\n  \r\n  // Redirect to Dutch version if no language specified\r\n  if (!lang) {\r\n    return next({ params: { lang: 'nl' }, replace: true });\r\n  }\r\n  \r\n  // Handle English route without trailing slash\r\n  if (lang === 'en') {\r\n    const path = to.fullPath;\r\n    if (path.match(/\\/en\\//)) {\r\n      return next(path.replace('/en/', '/en'));\r\n    }\r\n  }\r\n  \r\n  // Redirect invalid language codes to Dutch\r\n  if (!['nl', 'en'].includes(lang)) {\r\n    return next({ params: { lang: 'nl' }, replace: true });\r\n  }\r\n  \r\n  next();\r\n});\r\n\r\n\r\nexport default router;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,YAAY,QAAQ,YAAY;AAE3D,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,oBAAoB;AAC9C,CAAC,EACD;EACEF,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAE,aAAa;EACnBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,0BAA0B;AACpD,CAAC,CACF;AAED,MAAMC,MAAM,GAAGL,YAAY,CAAC;EAC1BM,OAAO,EAAEP,gBAAgB,CAAC,CAAC;EAC3BE;AACF,CAAC,CAAC;AAEFI,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,IAAI,GAAGH,EAAE,CAACI,MAAM,CAACD,IAAI;;EAE3B;EACA,IAAI,CAACA,IAAI,EAAE;IACT,OAAOD,IAAI,CAAC;MAAEE,MAAM,EAAE;QAAED,IAAI,EAAE;MAAK,CAAC;MAAEE,OAAO,EAAE;IAAK,CAAC,CAAC;EACxD;;EAEA;EACA,IAAIF,IAAI,KAAK,IAAI,EAAE;IACjB,MAAMT,IAAI,GAAGM,EAAE,CAACM,QAAQ;IACxB,IAAIZ,IAAI,CAACa,KAAK,CAAC,QAAQ,CAAC,EAAE;MACxB,OAAOL,IAAI,CAACR,IAAI,CAACW,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC1C;EACF;;EAEA;EACA,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAACG,QAAQ,CAACL,IAAI,CAAC,EAAE;IAChC,OAAOD,IAAI,CAAC;MAAEE,MAAM,EAAE;QAAED,IAAI,EAAE;MAAK,CAAC;MAAEE,OAAO,EAAE;IAAK,CAAC,CAAC;EACxD;EAEAH,IAAI,CAAC,CAAC;AACR,CAAC,CAAC;AAGF,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}