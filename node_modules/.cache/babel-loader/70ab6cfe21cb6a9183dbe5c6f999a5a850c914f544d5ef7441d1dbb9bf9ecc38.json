{"ast":null,"code":"const API_BASE_URL = process.env.VUE_APP_API_BASE_URL;\nexport default {\n  data() {\n    return {\n      subscribeEmail: '',\n      successMessage: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async handleSubscribe() {\n      try {\n        const response = await fetch(`API_BASE_URL/api/v1/send-updates`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.subscribeEmail\n          })\n        });\n        if (response.ok) {\n          this.successMessage = 'Successfully subscribed!';\n          this.subscribeEmail = '';\n          setTimeout(() => {\n            this.successMessage = '';\n          }, 5000);\n        } else {\n          throw new Error('Subscription failed');\n        }\n      } catch (error) {\n        this.errorMessage = 'Failed to subscribe. Please try again.';\n        setTimeout(() => {\n          this.errorMessage = '';\n        }, 5000);\n      }\n    }\n  }\n};","map":{"version":3,"names":["API_BASE_URL","process","env","VUE_APP_API_BASE_URL","data","subscribeEmail","successMessage","errorMessage","methods","handleSubscribe","response","fetch","method","headers","body","JSON","stringify","email","ok","setTimeout","Error","error"],"sources":["/Users/marwanaboudaoud/projects/DropshiphubWebsite/src/components/contact/newsletter.vue"],"sourcesContent":["<template>\n    <div class=\"container relative md:mt-24 my-16\">\n        <div class=\"relative isolate overflow-hidden px-6 py-12 sm:px-24\">\n            <h3 class=\"mx-auto max-w-3xl text-center text-3xl font-semibold tracking-tight text-black dark:text-white sm:text-4xl\">\n                {{ $t('newsletter.title') }}\n            </h3>\n            <p class=\"mx-auto mt-6 max-w-lg text-center text-lg text-gray-900 dark:text-gray-400\">{{$t('newsletter.description') }}</p>\n            <form class=\"mx-auto mt-10 flex max-w-md gap-x-4\" @submit.prevent=\"handleSubscribe\">\n                <label for=\"email-address\" class=\"sr-only\">Email address</label>\n                <input id=\"email-address\" v-model=\"subscribeEmail\" name=\"email\" type=\"email\" autocomplete=\"email\" required\n                        class=\"min-w-0 flex-auto rounded-md border-0 px-3.5 py-2 outline-none text-gray-900 dark:text-white dark:bg-slate-800 shadow-sm ring-1 ring-inset ring-dropshiphub-primary-500/10 focus:ring-2 focus:ring-inset focus:ring-dropshiphub-primary-500 sm:text-sm/6\"\n                        :placeholder=\"$t('newsletter.placeholder')\" />\n                <button type=\"submit\"\n                    class=\"flex-none rounded-md bg-dropshiphub-primary-500 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-dropshiphub-secondary-500\">\n                    {{ $t('newsletter.buttonText') }}\n                </button>\n            </form>\n            <div v-if=\"successMessage\" class=\"mt-4 text-center text-sm text-green-600\">\n                {{ successMessage }}\n            </div>\n            <div v-if=\"errorMessage\" class=\"mt-4 text-center text-sm text-red-600\">\n                {{ errorMessage }}\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\nconst API_BASE_URL = process.env.VUE_APP_API_BASE_URL\n\n\n\nexport default {\n    data() {\n        return {\n            subscribeEmail: '',\n            successMessage: '',\n            errorMessage: ''\n        }\n    },\n    methods: {\n        async handleSubscribe() {\n            try {\n                const response = await fetch(`API_BASE_URL/api/v1/send-updates`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    },\n                    body: JSON.stringify({\n                        email: this.subscribeEmail\n                    })\n                })\n\n                if (response.ok) {\n                    this.successMessage = 'Successfully subscribed!'\n                    this.subscribeEmail = ''\n                    setTimeout(() => {\n                        this.successMessage = ''\n                    }, 5000)\n                } else {\n                    throw new Error('Subscription failed')\n                }\n            } catch (error) {\n                this.errorMessage = 'Failed to subscribe. Please try again.'\n                setTimeout(() => {\n                    this.errorMessage = ''\n                }, 5000)\n            }\n        }\n    }\n}\n</script>\n"],"mappings":"AA6BA,MAAMA,YAAW,GAAIC,OAAO,CAACC,GAAG,CAACC,oBAAmB;AAIpD,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,cAAc,EAAE,EAAE;MAClBC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE;IAClB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,eAAeA,CAAA,EAAG;MACpB,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,kCAAkC,EAAE;UAC7DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,QAAQ,EAAE;UACd,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBC,KAAK,EAAE,IAAI,CAACZ;UAChB,CAAC;QACL,CAAC;QAED,IAAIK,QAAQ,CAACQ,EAAE,EAAE;UACb,IAAI,CAACZ,cAAa,GAAI,0BAAyB;UAC/C,IAAI,CAACD,cAAa,GAAI,EAAC;UACvBc,UAAU,CAAC,MAAM;YACb,IAAI,CAACb,cAAa,GAAI,EAAC;UAC3B,CAAC,EAAE,IAAI;QACX,OAAO;UACH,MAAM,IAAIc,KAAK,CAAC,qBAAqB;QACzC;MACJ,EAAE,OAAOC,KAAK,EAAE;QACZ,IAAI,CAACd,YAAW,GAAI,wCAAuC;QAC3DY,UAAU,CAAC,MAAM;UACb,IAAI,CAACZ,YAAW,GAAI,EAAC;QACzB,CAAC,EAAE,IAAI;MACX;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}