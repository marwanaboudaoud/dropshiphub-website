{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'LanguageSwitcher',\n  computed: {\n    currentLocale() {\n      return this.$i18n.locale.value;\n    }\n  },\n  mounted() {\n    // Check localStorage for saved locale, default to 'nl' if not found\n    const savedLocale = localStorage.getItem('locale');\n    if (savedLocale) {\n      this.$i18n.changeLanguage(savedLocale);\n    } else {\n      this.$i18n.changeLanguage('nl'); // Default to Dutch\n      localStorage.setItem('locale', 'nl'); // Set the default locale in localStorage\n    }\n  },\n  methods: {\n    changeLanguage(event) {\n      const selectedLocale = event.target.value;\n      this.$i18n.changeLanguage(selectedLocale);\n      localStorage.setItem('locale', selectedLocale); // Save the selected locale to localStorage\n\n      // Update the current route to reflect the selected language\n      const currentPath = this.$route.path;\n      let newPath;\n      if (selectedLocale === 'nl') {\n        newPath = currentPath.replace(/\\/en/, ''); // Remove /en from the path\n      } else {\n        newPath = `/en${currentPath.replace(/\\/en/, '')}`; // Add /en to the path\n      }\n      this.$router.push(newPath); // Navigate to the new path\n    }\n  }\n};","map":{"version":3,"names":["name","computed","currentLocale","$i18n","locale","value","mounted","savedLocale","localStorage","getItem","changeLanguage","setItem","methods","event","selectedLocale","target","currentPath","$route","path","newPath","replace","$router","push"],"sources":["/Users/marwanaboudaoud/projects/DropshiphubWebsite/src/components/LanguageSwitcher.vue"],"sourcesContent":["<template>\n  <select class=\"border border-dropshiphub-primary-500 rounded-md px-2 py-0.5\" @change=\"changeLanguage\" :value=\"currentLocale\">\n    <option value=\"nl\">Nederlands</option>\n    <option value=\"en\">English</option>\n  </select>\n</template>\n\n<script>\nexport default {\n  name: 'LanguageSwitcher',\n  computed: {\n    currentLocale() {\n      return this.$i18n.locale.value;\n    }\n  },\n  mounted() {\n    // Check localStorage for saved locale, default to 'nl' if not found\n    const savedLocale = localStorage.getItem('locale');\n    if (savedLocale) {\n      this.$i18n.changeLanguage(savedLocale);\n    } else {\n      this.$i18n.changeLanguage('nl'); // Default to Dutch\n      localStorage.setItem('locale', 'nl'); // Set the default locale in localStorage\n    }\n  },\n  methods: {\n    changeLanguage(event) {\n      const selectedLocale = event.target.value;\n      this.$i18n.changeLanguage(selectedLocale);\n      localStorage.setItem('locale', selectedLocale); // Save the selected locale to localStorage\n\n      // Update the current route to reflect the selected language\n      const currentPath = this.$route.path;\n      let newPath;\n      if (selectedLocale === 'nl') {\n        newPath = currentPath.replace(/\\/en/, ''); // Remove /en from the path\n      } else {\n        newPath = `/en${currentPath.replace(/\\/en/, '')}`; // Add /en to the path\n      }\n      this.$router.push(newPath); // Navigate to the new path\n    }\n  }\n}\n</script>\n"],"mappings":";AAQA,eAAe;EACbA,IAAI,EAAE,kBAAkB;EACxBC,QAAQ,EAAE;IACRC,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,KAAK;IAChC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,WAAU,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAClD,IAAIF,WAAW,EAAE;MACf,IAAI,CAACJ,KAAK,CAACO,cAAc,CAACH,WAAW,CAAC;IACxC,OAAO;MACL,IAAI,CAACJ,KAAK,CAACO,cAAc,CAAC,IAAI,CAAC,EAAE;MACjCF,YAAY,CAACG,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE;IACxC;EACF,CAAC;EACDC,OAAO,EAAE;IACPF,cAAcA,CAACG,KAAK,EAAE;MACpB,MAAMC,cAAa,GAAID,KAAK,CAACE,MAAM,CAACV,KAAK;MACzC,IAAI,CAACF,KAAK,CAACO,cAAc,CAACI,cAAc,CAAC;MACzCN,YAAY,CAACG,OAAO,CAAC,QAAQ,EAAEG,cAAc,CAAC,EAAE;;MAEhD;MACA,MAAME,WAAU,GAAI,IAAI,CAACC,MAAM,CAACC,IAAI;MACpC,IAAIC,OAAO;MACX,IAAIL,cAAa,KAAM,IAAI,EAAE;QAC3BK,OAAM,GAAIH,WAAW,CAACI,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;MAC7C,OAAO;QACLD,OAAM,GAAI,MAAMH,WAAW,CAACI,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,EAAE;MACrD;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAACH,OAAO,CAAC,EAAE;IAC9B;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}